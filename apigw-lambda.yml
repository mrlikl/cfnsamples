AWSTemplateFormatVersion: "2010-09-09"
Description: "A single Lambda function behind an API Gateway"

Resources:
  GreetingLambda:
    Type: "AWS::Lambda::Function"
    Properties:
      Code:
        ZipFile: |
          'use strict'
          exports.handler = (event, context, callback) => {
            console.log('Event:', JSON.stringify(event));
            const name = event.name || 'World';
            const response = {greeting: `Hello, ${name}!`};
            callback(null, response);
          };
      FunctionName: GreetingLambda
      Handler: index.handler
      Role: !GetAtt
        - LambdaExecutionRole
        - Arn
      Runtime: nodejs16.x
  LambdaExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
  GreetingApi:
    Type: "AWS::ApiGateway::RestApi"
    Properties:
      Name: Greeting API
      FailOnWarnings: true
  LambdaPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: "lambda:invokeFunction"
      FunctionName: !GetAtt
        - GreetingLambda
        - Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Join
        - ""
        - - "arn:aws:execute-api:"
          - !Ref "AWS::Region"
          - ":"
          - !Ref "AWS::AccountId"
          - ":"
          - !Ref GreetingApi
          - /*
  ApiGatewayCloudWatchLogsRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: ApiGatewayLogsPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:DescribeLogGroups"
                  - "logs:DescribeLogStreams"
                  - "logs:PutLogEvents"
                  - "logs:GetLogEvents"
                  - "logs:FilterLogEvents"
                Resource: "*"
  ApiGatewayAccount:
    Type: "AWS::ApiGateway::Account"
    Properties:
      CloudWatchRoleArn: !GetAtt
        - ApiGatewayCloudWatchLogsRole
        - Arn
  GreetingApiStage:
    DependsOn:
      - ApiGatewayAccount
    Type: "AWS::ApiGateway::Stage"
    Properties:
      DeploymentId: !Ref ApiDeployment
      MethodSettings:
        - DataTraceEnabled: true
          HttpMethod: "*"
          LoggingLevel: INFO
          ResourcePath: /*
      RestApiId: !Ref GreetingApi
      StageName: LATEST
  ApiDeployment:
    Type: "AWS::ApiGateway::Deployment"
    DependsOn:
      - GreetingRequest
    Properties:
      RestApiId: !Ref GreetingApi
      StageName: DummyStage
  GreetingResource:
    Type: "AWS::ApiGateway::Resource"
    Properties:
      RestApiId: !Ref GreetingApi
      ParentId: !GetAtt
        - GreetingApi
        - RootResourceId
      PathPart: greeting
  GreetingRequest:
    DependsOn: LambdaPermission
    Type: "AWS::ApiGateway::Method"
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      Integration:
        Type: AWS
        IntegrationHttpMethod: POST
        Uri: !Join
          - ""
          - - "arn:aws:apigateway:"
            - !Ref "AWS::Region"
            - ":lambda:path/2015-03-31/functions/"
            - !GetAtt
              - GreetingLambda
              - Arn
            - /invocations
        IntegrationResponses:
          - StatusCode: 200
        RequestTemplates:
          application/json: !Join
            - ""
            - - "{"
              - '  "name": "$input.params(''name'')"'
              - "}"
      RequestParameters:
        method.request.querystring.name: false
      ResourceId: !Ref GreetingResource
      RestApiId: !Ref GreetingApi
      MethodResponses:
        - StatusCode: 200
Outputs:
  RootUrl:
    Description: Root URL of the API gateway
    Value: !Join
      - ""
      - - "https://"
        - !Ref GreetingApi
        - .execute-api.
        - !Ref "AWS::Region"
        - .amazonaws.com
